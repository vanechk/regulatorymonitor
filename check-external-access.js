#!/usr/bin/env node

const http = require('http');
const https = require('https');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
  clientPort: 5173,
  serverPort: 3001,
  host: 'localhost' // –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à IP –∏–ª–∏ –¥–æ–º–µ–Ω
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
function checkPort(host, port, description) {
  return new Promise((resolve) => {
    const client = http;
    const req = client.request({
      host: host,
      port: port,
      path: '/',
      method: 'GET',
      timeout: 5000
    }, (res) => {
      console.log(`‚úÖ ${description} (–ø–æ—Ä—Ç ${port}): –î–æ—Å—Ç—É–ø–µ–Ω`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
      console.log(`   URL: http://${host}:${port}`);
      resolve(true);
    });

    req.on('error', (err) => {
      console.log(`‚ùå ${description} (–ø–æ—Ä—Ç ${port}): –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
      console.log(`   –û—à–∏–±–∫–∞: ${err.message}`);
      resolve(false);
    });

    req.on('timeout', () => {
      console.log(`‚è∞ ${description} (–ø–æ—Ä—Ç ${port}): –¢–∞–π–º–∞—É—Ç`);
      req.destroy();
      resolve(false);
    });

    req.end();
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
async function checkExternalAccess() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ TaxNewsRadar...\n');
  
  // –ü–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å
  const os = require('os');
  const networkInterfaces = os.networkInterfaces();
  let localIP = 'localhost';
  
  // –ò—â–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å
  for (const name of Object.keys(networkInterfaces)) {
    for (const interface of networkInterfaces[name]) {
      if (interface.family === 'IPv4' && !interface.internal) {
        localIP = interface.address;
        break;
      }
    }
    if (localIP !== 'localhost') break;
  }
  
  console.log(`üìç –õ–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å: ${localIP}\n`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç
  const clientAvailable = await checkPort(localIP, config.clientPort, '–ö–ª–∏–µ–Ω—Ç (React)');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
  const serverAvailable = await checkPort(localIP, config.serverPort, '–°–µ—Ä–≤–µ—Ä (API)');
  
  console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
  console.log('========================');
  
  if (clientAvailable && serverAvailable) {
    console.log('üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã!');
    console.log(`\nüåê –í–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏:`);
    console.log(`   –ö–ª–∏–µ–Ω—Ç: http://${localIP}:${config.clientPort}`);
    console.log(`   API: http://${localIP}:${config.serverPort}`);
    console.log(`\nüìß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:`);
    console.log(`   –û–±–Ω–æ–≤–∏—Ç–µ FRONTEND_URL –≤ .env —Ñ–∞–π–ª–µ:`);
    console.log(`   FRONTEND_URL="http://${localIP}:${config.clientPort}"`);
  } else {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
    console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    
    if (!clientAvailable) {
      console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω: npm run dev:client');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—Ä—Ç 5173 –Ω–µ –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º');
    }
    
    if (!serverAvailable) {
      console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npm run dev:server');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—Ä—Ç 3001 –Ω–µ –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º');
    }
    
    console.log('\nüîí –î–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞:');
    console.log('   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª –¥–ª—è –ø–æ—Ä—Ç–æ–≤ 3001 –∏ 5173');
    console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  }
  
  console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: EXTERNAL_ACCESS.md');
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
if (require.main === module) {
  checkExternalAccess().catch(console.error);
}

module.exports = { checkExternalAccess };
