const fetch = require('node-fetch');

async function testServerHealth() {
  console.log('üè• –ü—Ä–æ–≤–µ—Ä—è—é –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞...');
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ endpoint
    console.log('\nüì° –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω–æ–π endpoint');
    const response1 = await fetch('http://localhost:3000/api/test');
    console.log('–°—Ç–∞—Ç—É—Å:', response1.status);
    
    if (response1.ok) {
      const data1 = await response1.json();
      console.log('–û—Ç–≤–µ—Ç:', JSON.stringify(data1, null, 2));
    } else {
      const errorText = await response1.text();
      console.log('–û—à–∏–±–∫–∞:', errorText);
    }
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ auth endpoint
    console.log('\nüîê –¢–µ—Å—Ç 2: Auth endpoint');
    const response2 = await fetch('http://localhost:3000/api/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        username: 'testuser',
        password: 'testpass'
      })
    });
    console.log('–°—Ç–∞—Ç—É—Å:', response2.status);
    
    if (response2.ok) {
      const data2 = await response2.json();
      console.log('–û—Ç–≤–µ—Ç:', JSON.stringify(data2, null, 2));
    } else {
      const errorText = await response2.text();
      console.log('–û—à–∏–±–∫–∞:', errorText);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    console.error('Stack:', error.stack);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testServerHealth();
